# Generated by Django 2.1.2 on 2018-11-27 17:38

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('institucion', models.CharField(blank=True, max_length=255, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'db_table': 'usuario',
                'managed': True,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CentroEscolar',
            fields=[
                ('id_centro', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('id_dep', models.SmallIntegerField(blank=True, null=True)),
                ('nombre_centro', models.CharField(blank=True, max_length=255, null=True)),
                ('direccion', models.CharField(blank=True, max_length=255, null=True)),
                ('telefono_centro', models.CharField(blank=True, max_length=20, null=True)),
                ('director', models.CharField(blank=True, max_length=100, null=True)),
                ('telefono_direc', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'centro_escolar',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Departamento',
            fields=[
                ('id_dep', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('nombre_dep', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'departamento',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='EstadoProyecto',
            fields=[
                ('id_estado', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('nombre_estado', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'estado_proyecto',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Municipio',
            fields=[
                ('id_muni', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('nombre_muni', models.CharField(blank=True, max_length=255, null=True)),
                ('id_dep', models.ForeignKey(db_column='id_dep', on_delete=django.db.models.deletion.PROTECT, to='modelos.Departamento')),
            ],
            options={
                'db_table': 'municipio',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Prioridad',
            fields=[
                ('id_priori', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('nombre_prioridad', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'prioridad',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Proveedores',
            fields=[
                ('id_proveedor', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('nombre_empresa', models.CharField(blank=True, max_length=100, null=True)),
                ('telefono', models.CharField(blank=True, max_length=20, null=True)),
                ('nit', models.CharField(blank=True, max_length=50, null=True)),
                ('contacto', models.CharField(blank=True, max_length=100, null=True)),
                ('id_usuario', models.ForeignKey(blank=True, db_column='id_usuario', null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'proveedores',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Proyectos',
            fields=[
                ('id_proyecto', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('nombre_proyecto', models.CharField(blank=True, max_length=100, null=True)),
                ('descripcion', models.CharField(blank=True, max_length=255, null=True)),
                ('tiempo_estimado', models.DecimalField(blank=True, decimal_places=0, max_digits=5, null=True)),
            ],
            options={
                'db_table': 'proyectos',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Roles',
            fields=[
                ('id_rol', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('nombre_rol', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'roles',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ProveedorProyecto',
            fields=[
                ('id_proyecto', models.OneToOneField(db_column='id_proyecto', on_delete=django.db.models.deletion.PROTECT, primary_key=True, serialize=False, to='modelos.Proyectos')),
                ('fecha_inicio', models.DateField(blank=True, null=True)),
                ('fecha_fin', models.DateField(blank=True, null=True)),
                ('costo', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('numero_tareas', models.IntegerField(blank=True, null=True)),
                ('tarea_actual', models.IntegerField(blank=True, null=True)),
                ('id_estado', models.ForeignKey(blank=True, db_column='id_estado', null=True, on_delete=django.db.models.deletion.PROTECT, to='modelos.EstadoProyecto')),
                ('id_proveedor', models.OneToOneField(db_column='id_proveedor', on_delete=django.db.models.deletion.PROTECT, to='modelos.Proveedores')),
            ],
            options={
                'db_table': 'proveedor_proyecto',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='proyectos',
            name='id_centro',
            field=models.ForeignKey(blank=True, db_column='id_centro', null=True, on_delete=django.db.models.deletion.PROTECT, to='modelos.CentroEscolar'),
        ),
        migrations.AddField(
            model_name='proyectos',
            name='id_priori',
            field=models.ForeignKey(blank=True, db_column='id_priori', null=True, on_delete=django.db.models.deletion.PROTECT, to='modelos.Prioridad'),
        ),
        migrations.AddField(
            model_name='centroescolar',
            name='id_muni',
            field=models.ForeignKey(blank=True, db_column='id_muni', null=True, on_delete=django.db.models.deletion.PROTECT, to='modelos.Municipio'),
        ),
        migrations.AddField(
            model_name='centroescolar',
            name='id_usuario',
            field=models.ForeignKey(blank=True, db_column='id_usuario', null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='usuario',
            name='id_rol',
            field=models.ForeignKey(blank=True, db_column='id_rol', null=True, on_delete=django.db.models.deletion.PROTECT, to='modelos.Roles'),
        ),
        migrations.AddField(
            model_name='usuario',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AlterUniqueTogether(
            name='municipio',
            unique_together={('id_muni', 'id_dep')},
        ),
        migrations.AlterUniqueTogether(
            name='proveedorproyecto',
            unique_together={('id_proyecto', 'id_proveedor')},
        ),
    ]
